#include <stdio.h>
#include <conio.h>
 
const N=4;
//нахождение детерминанта
float Det(int G, double M[4][4])
{
 if (G == 1)
 return M[0][0];
 else
 {
     double M1[4][4];
     int i, x, X, Y;
     float Res = 0;
     for (i = 0; i < G; i++)
     {
         for (Y = 1; Y < G; Y++)
         {
             x = 0;
             for (X = 0; X < G; X++)
             if (X != i)
             M1[Y-1][x++] = M[Y][X];
         }
         if (i % 2 == 0)
         Res += M[0][i] * Det(G - 1, M1);
         else
         Res -= M[0][i] * Det(G - 1, M1);
     }
     return Res;
 }
}
//-----------------------------------------------------------------------------
 
//¬ывод на экран матрицы
vyvod(double V[4][4])
{
        int i,j;
        for (i = 0; i < N; i++)
        for (j = 0; j < N; j++)
        {
                if (j==0) printf("\n");
                else printf("\t");
            printf("%7.2f", V[i][j]);
        }
        printf("\n");
}
 
//создание матрицы и нахождение  детерминанта 
podstanovka(int k, double M[4][4],double A[4][4],double B[4])
{   
        int i,j;        
    for (i=0; i<N; i++)
    for (j=0; j<N; j++)
    {
       M[i][j] = A[i][j];
    }
    for (i=0; i<N; i++)                         //подстановка
    {                                           //
                                                //
        M[i][k] = B[i];                         //
    }                                           //
     float Opr = Det(4, M);
     return Opr;                                                                
}
 
 
 main( )
{
    int i,j; 
        double A[4][4]={{2,-1,3,2},
                        {2,3,3,2},
                        {3,-1,-1,2},
                        {3,-1,3,-1}};
 
        double B[4]={4,6,6,6};
 
//¬ывод на экран исходной матрицы
printf("\nVyvod ishodnoi matricy");
vyvod(A);
        
//------Ќахождение определител€ исходной матрицы---------------------------     
        printf("\nVyvod determinanta ishodnoi matricy\n");
        float Op = Det(4, A);
    printf("Determinant = %7.2f\n", Op);
//-------------------------------------------------------------------------     
 
//***********************************
        //действи€ над новыми матрицами
    double M1[N][N];
        float Op1 = podstanovka(0, M1, A, B);
    printf("Determinant 1 = %7.2f\n", Op1);
    
    double M2[N][N];
        float Op2 = podstanovka(1, M2, A, B);
    printf("Determinant 2 = %7.2f\n", Op2);
    
    double M3[N][N];
        float Op3 = podstanovka(2, M3, A, B);
    printf("Determinant 3 = %7.2f\n", Op3);
    
    double M4[N][N];
        float Op4 = podstanovka(3, M4, A, B);
    printf("Determinant 4 = %7.2f\n", Op4);
   
 
// ¬ывод решени€
printf("\nVyvod resheniya\n");
float x1 = Op1/Op;
printf("X1 = %7.2f\n", x1);
float x2 = Op2/Op;
printf("X2 = %7.2f\n", x2);
float x3 = Op3/Op;
printf("X3 = %7.2f\n", x3);
float x4 = Op4/Op;
printf("X4 = %7.2f\n", x4);
 
        system("pause");                
}