;ПРИМЕР 1



; Упорядочить массив чисел, заданный в сегменте данных,по возрастанию

.stack 100h
.data
;
massiv db 3,5,8,4,9,1,0,5,8,3

.code
start:
	mov ax,@data  ;позиционируем регистр ds на сегмент данных
	mov ds,ax

;  Сортировка чисел методом пузырька

	xor si,si
	xor di,di
	mov cx,9	;всего 9 тактов: число с индексом si будем сравнивать со всеми последующими 
			;(не рассортированными), у которых будет индекс di

for1:			;for (si=0;si<9;si++)
	push cx
	mov di,si
	inc di
for2:		;for(di=si+1;di<9;di++)	
		;этот цикл просматривает все последующие за si числа

	push cx
	mov al,massiv[si] ;сравниваем числа с индексами si
	cmp al,massiv[di] ;и di

	jng lab1	  ;если условие [si]<[di] выполняется, то продолжаем цикл

	mov ah,massiv[di] ;если нет, то меняем числа местами 
	mov massiv[si],ah
	mov massiv[di],al
lab1:
	inc di		;наращиваем di
	pop cx		;извлекаем cx из стека
	loop for2
	
	inc si		;наращиваем si

	pop cx		;извлекаем cx из стека
	dec cx		;уменьшаем его на 1
	cmp cx,0	;конец цикла?
	je lab2		; да - продолжение программы и пропуск команды безусловного перехода
	jmp for1	;нет - безусловный переход на метку for1 и продолжение цикла 
lab2:
	mov ax,4c00h
	int 21h
end start